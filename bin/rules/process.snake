""" rules for processing mapped scifi-RNA-seq reads using alevin-fry """

rule generate_permit_list:
    input:
        mapped_reads = OUT_DATA + "/mapped_reads"
    output:
        quant = OUT_DATA + "/quant"
    params:
        job_name = "generate_permit_list"
        memory = "select[mem > 45] rusage[mem = 45]", # LSF format; change as needed
    log:
    shell:
        """
        source ~/miniconda3/etc/profile.d/conda.sh
        conda activate alevin_fry
        alevin-fry generate-permit-list \
            -d fw \
            --force-cells 100000 \
            -i {input.mapped_reads} \
            -o {output.quant}
        """

rule collate:
    input:
        quant = OUT_DATA + "/quant"
    params:
        job_name = "collate"
        memory = "select[mem > 45] rusage[mem = 45]", # LSF format; change as needed
        rad_dir = OUT_DATA + "/mapped_reads"
    log:
    threads:
        16
    shell:
        """
        source ~/miniconda3/etc/profile.d/conda.sh
        conda activate alevin_fry
        alevin-fry collate \
            -t {threads} \
            -i {input.quant} \
            -r {params.rad_dir}
        """

rule quant:
    input:
        quant = OUT_DATA + "/quant"
        tgmap = GENOME_DIR + "/splici_transcriptome/transcriptome_splici_fl86_t2g.tsv"
    output:
        quant_res = OUT_DATA + "/quant_res"
    params:
        job_name = "quant"
        memory = "select[mem > 45] rusage[mem = 45]", # LSF format; change as needed
    log:
    threads:
        16
    shell:
        """
        source ~/miniconda3/etc/profile.d/conda.sh
        conda activate alevin_fry
        alevin-fry quant \
            -t {threads} \
            -i {input.quant} \
            -o {output.quant_res} \
            --tg-map {input.tgmap} \
            --resolution cr-like \
            --use-mtx
        """